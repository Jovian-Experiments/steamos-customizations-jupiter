#!/bin/sh
# -*- mode: sh; indent-tabs-mode: nil; sh-basic-offset: 4; -*-
# vim: et sts=4 sw=4

#  SPDX-License-Identifier: LGPL-2.1+
#
#  Copyright © 2019-2021 Collabora Ltd.
#  Copyright © 2019-2021 Valve Corporation.
#
#  This file is part of steamos-customizations.
#
#  steamos-customizations is free software; you can redistribute it and/or modify
#  it under the terms of the GNU Lesser General Public License as published
#  by the Free Software Foundation; either version 2.1 of the License, or
#  (at your option) any later version.

# Initialize /var in case of first boot
#
# /var is empty on first boot or after a factory reset. A 'usual' way of
# initializing is to use systemd-tmpfiles, and indeed it's how it's done.
# However it doesn't run early enough to initialize /var/lib/modules in time.
#
# For the record, SteamOS has a custom layout for kernel modules things,
# due to the requirement to have DKMS working with a read-only rootfs,
# so we end up having kernel module things in /var rather than /usr.
# The kernel modules must be available super early at boot, earlier than
# what systemd-tmpfiles provides out of the box.
# 
# So systemd-tmpfiles won't work for us. I thought about using it from the
# initrd instead, and using the `--root=/sysroot` option, but that doesn't
# really work either, see <https://github.com/systemd/systemd/issues/12467>.
#
# So, let's do the job manually here.

. /lib/dracut-lib.sh

initialize_var_lib_modules() {

    # Create /var/lib/modules from factory

    local moddir=var/lib/modules
    local orig=$NEWROOT@datadir@/factory/$moddir
    local dest=$NEWROOT/$moddir

    [ -e "$dest" ] && return
    [ -d "$orig" ] || return
    
    info "Creating module directory '$dest'"
    mkdir -p "$(dirname "$dest")"
    cp -a "$orig" "$dest"
}

initialize_var_lib_modules
