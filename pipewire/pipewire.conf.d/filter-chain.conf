context.spa-libs = {
    audio.convert.* = audioconvert/libspa-audioconvert
    support.*       = support/libspa-support
}

context.modules = [
    {   name = libpipewire-module-filter-chain
        args = {
            node.name =  "filter-chain-source"
            node.description =  "Filter Chain Source"
            media.name =  "Filter Chain Source"
            filter.graph = {
                nodes = [
                    {
                        type = ladspa
                        name = rnnoise
                        plugin = /usr/lib/ladspa/librnnoise_ladspa.so
                        label = noise_suppressor_stereo
                        control = {
                            "VAD Threshold (%)" = 23.0
			    "VAD Grace Period (ms)" = 200
                        }
                    }
                    {
                        type = ladspa
                        name = equaliser
                        plugin = /usr/lib/ladspa/caps.so
                        label = Eq10X2
                        control = {
                            "31 Hz" 0
                            "63 Hz" 0
                            "125 Hz" 0
                            "250 Hz" 0
                            "500 Hz" 0
                            "1 kHz" 0
                            "2 kHz" 0
                            "4 kHz" 0
                            "8 kHz" -3
                            "16 kHz" -3
                        }
                    }
                    {
                        type = ladspa
                        name = compressor
                        plugin = /usr/lib/ladspa/caps.so
                        label = CompressX2
                        control = {
                            "measure" 1
                            "mode" 1
                            "threshold" 0.5
                            "strength" 0.25
                            "attack" 0.75
                            "release" 0.5
                            "gain (dB)" 12
                        }
                    }
                ]
                links = [
                    { output = "rnnoise:Output (L)" input = "equaliser:in.l" }
                    { output = "rnnoise:Output (R)" input = "equaliser:in.r" }
                    { output = "equaliser:out.l" input = "compressor:in.l" }
                    { output = "equaliser:out.r" input = "compressor:in.r" }
                ]
            }
            capture.props = {
                node.name = "filter-chain-capture"
                node.passive = true
            }
            playback.props = {
                node.name = "filter-chain-source"
                media.class = Audio/Source
            }
        }
    }
]
